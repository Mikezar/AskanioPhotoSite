@model AskanioPhotoSite.Core.Models.PhotoUploadModel

<style>
    .modal-dialog {
        width: 1150px;
    }
</style>
<div id="editUploadPhotoModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Редактирование фотографии @Model.FileName</h4>
            </div>
            @using (Ajax.BeginForm(Model.Action, new AjaxOptions
            {
                OnComplete = "OnSuccessSave"
            }))
            {
                <div class="modal-body">
                    @Html.HiddenFor(x => x.Id)
                    @Html.HiddenFor(x => x.ThumbnailPath)
                    @Html.HiddenFor(x => x.PhotoPath)
                    @Html.HiddenFor(x => x.CreationDate)
                    @Html.HiddenFor(x => x.FileName)
                    @Html.HiddenFor(x => x.ReturnUrl)
                    @Html.HiddenFor(x => x.Order)

                    <div class="form-horizontal">
                        <div class="col-sm-6">
                            <p class="language-title">Русский</p>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(x => x.TitleRu, new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(x => x.TitleRu, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.TitleRu)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.DescriptionRu, new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8">
                                    @Html.TextAreaFor(x => x.DescriptionRu, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.DescriptionRu)
                                </div>
                            </div>
                            <p class="language-title">Английский</p>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(x => x.TitleEng, new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(x => x.TitleEng, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.TitleEng)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.DescriptionEng, new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8">
                                    @Html.TextAreaFor(x => x.DescriptionEng, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.DescriptionEng)
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(x => x.ShowRandom, new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8">
                                    @Html.CheckBoxFor(x => x.ShowRandom, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.IsForBackground, new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8">
                                    @Html.CheckBoxFor(x => x.IsForBackground, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.Album, new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(x => x.Album.Id, Model.Albums, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.Label("Тэги", new { @class = "control-label col-sm-2" })
                                <div class="col-sm-10">
                                    @Html.ListBoxFor(x => x.RelatedTagIds, Model.AllTags, new { @class = "form-control", @id = "tag-select" })
                                </div>
                            </div>
                            @Html.EditorFor(x => x.ImageAttributes)
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="clearfix"></div>
                    <div class="col-sm-12">
                        @if (Model.Album?.Id != 0)
                        {
                            <button id="albumCover" data-id="@Model.Album.Id" data-cover="@Model.ThumbnailPath" type="button" class="btn btn-success">Сделать обложкой альбома</button>
                        }

                        <button type="button" class="btn btn-default" data-dismiss="modal" onclick="OnSuccessSave()">Закрыть</button>
                        <button type="submit" class="btn btn-primary">Сохранить</button>
                    </div>
                 </div>
               }
        </div>
     </div>
</div>

<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script>
    $(document).ready(function () {
        WatermarkChangeHandler();
        $('#tag-select').multiSelect({
            selectableHeader: "<div class='custom-header'>Доступные тэги</div>",
            selectionHeader: "<div class='custom-header'>Привязанные тэги</div>",
        });
        $('#albumCover').on('click', function () {
            var id = $(this).data("id");
            var cover = $(this).data("cover");
            $.ajax(
                {
                    type: "POST",
                    url: '@Url.Action("SetAlbumCover")',
                    data: { id: id, cover: cover },
                    success: function (result) {
                        if (result.success) {
                            bootbox.alert("Обложка была успешно изменена")
                        }
                        else {
                            bootbox.alert(result.errorMessage)
                        }
                    }
                });
        });
    });

    function OnSuccessSave()
    {
        $('#editUploadPhotoModal').modal("toggle");
    }
</script>